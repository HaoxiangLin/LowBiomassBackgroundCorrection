heatmap(cov.abund.matrix[100:104,100:104])
(cov.abund.matrix[100:104,100:104])
heatmap(cov.abund.matrix[100:104,100:104],symm = T)
heatmap(cov.abund.matrix[100:124,100:124],symm = T)
heatmap(cov.abund.matrix[100:1024,100:1024],symm = T)
melt(cov.abund.matrix)
melted = melt(cov.abund.matrix)
View(melted)
melted = melted[melted$Var1 != melted$Var2,]
ncbi_get_taxon_summary(5061)
ncbi_get_taxon_summary(158899)
ncbi_get_taxon_summary(393049)
ncbi_get_taxon_summary(687380)
ncbi_get_taxon_summary(1747)
ncbi_get_taxon_summary(376758)
ncbi_get_taxon_summary(158899)
ncbi_get_taxon_summary(687379.)
ncbi_get_taxon_summary(274)
ncbi_get_taxon_summary(5061)
head(melted)
melted = melted[melted$value>10**-4,]
melted
colnames(melt.frame) = c("Tax.ID.1", "Tax.ID.2", "Value")
document()
install("/workdir/psb84/SparseMetagenomics/SparseMetagenomicCorrection")
library(SparseMetagenomicCorrection)
EE.meta$EX.batch
WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,BatchName ="EX.batch" , BatchID = "60617_0")
cleb = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,BatchName ="EX.batch" , BatchID = "60617_0", Correlate.threshold = 10**-1)
cleb$Taxon.Correlates
abc = cleb$Taxon.Correlates
View(abc)
ncbi_get_taxon_summary(393049)
ncbi_get_taxon_summary(1747)
ncbi_get_taxon_summary(687379)
ncbi_get_taxon_summary(493803)
document()
install("/workdir/psb84/SparseMetagenomics/SparseMetagenomicCorrection")
library(SparseMetagenomicCorrection)
cleb = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,Correlate.threshold = 10**-1)
document()
install("/workdir/psb84/SparseMetagenomics/SparseMetagenomicCorrection")
library(SparseMetagenomicCorrection)
cleb = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,Correlate.threshold = 10**-1)
document()
install("/workdir/psb84/SparseMetagenomics/SparseMetagenomicCorrection")
library(SparseMetagenomicCorrection)
cleb = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,Correlate.threshold = 10**-1)
cleb
abc = cleb$Taxon.Correlates
View(abc)
ncbi_get_taxon_summary(c(687380,687379))
ncbi_get_taxon_summary(c(687380,393049))
ncbi_get_taxon_summary(c(687380,285))
ncbi_get_taxon_summary(c(10359,285))
ncbi_get_taxon_summary(c(10359,285))
ncbi_get_taxon_summary(c(400756,285))
ncbi_get_taxon_summary(c(400756,687379))
abc = cleb$Taxon.Variation
ncbi_get_taxon_summary(c(400756,1200300))
ncbi_get_taxon_summary(c(400756,2234))
cleb[["Taxon.Variation"]]
Batch.1 = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,BatchName ="EX.batch" , BatchID = "60617_0", Correlate.threshold = 10**-1)
Batch.2 = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,BatchName ="EX.batch" , BatchID = "52517_0", Correlate.threshold = 10**-1)
Batch.all = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,Correlate.threshold = 10**-1)
maroon - list(Batch.1,Batch.2)
maroon <- list(Batch.1,Batch.2)
maroon[1]
maroon[2]
maroon[3]
length(maroon)
sapply(1:2, function(x) maroon[x]$BatchName)
sapply(1:2, function(x) maroon[x])
sapply(1:2, function(x) maroon[x][["BatchName"]])
maroon[1][1]
maroon[1][[1]]
maroon[[1]]
maroon[[1]]$BatchID
sapply(1:2, function(x) maroon[[]]$BatchName)
sapply(1:2, function(x) maroon[[x]]$BatchName)
sapply(1:2, function(x) paste0(maroon[[x]]$BatchName,"-",maroon[[x]]$BatchID))
batchnames = as.character(sapply(1:n.batchframes,
function(x) paste0(maroon[[x]]$BatchName,"-",
maroon[[x]]$BatchID))) ;
Batchlist=list(Batch.all,Batch.1,Batch.2)
n.batchframes = length(BatchList) ;
BatchList=list(Batch.all,Batch.1,Batch.2)
n.batchframes = length(BatchList) ;
batchnames = as.character(sapply(1:n.batchframes,
function(x) paste0(BatchList[[x]]$BatchName,"-",
BatchList[[x]]$BatchID))) ;
BatchList[[1]]
BatchList[[1]]$Taxon.Variation
Batch.Var.Frame = BatchList[[1]]$Taxon.Variation
Batch.Var.Frame
Batch.Var.Frame = BatchList[[1]]$Taxon.Variation
for ( i in 2:n.batchframes){
Batch.Var.Frame = merge(Batch.Var.Frame, BatchList[[i]]$Taxon.Variation, by ="Tax.ID")
}
head(Batch.Var.Frame)
for ( i in 2:n.batchframes){
Batch.Var.Frame = merge(Batch.Var.Frame, BatchList[[i]]$Taxon.Variation, by ="Tax.ID")
}
head(Batch.Var.Frame)
View(EE.meta)
Batch.1 = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,BatchName ="EX.batch" , BatchID = "60617_0", Correlate.threshold = 10**-1)
Batch.2 = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,BatchName ="EX.batch" , BatchID = "52517_0", Correlate.threshold = 10**-1)
Batch.3 = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,BatchName ="EX.batch" , BatchID = "61317_1", Correlate.threshold = 10**-1)
Batch.all = WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta,Correlate.threshold = 10**-1)
BatchList = list(Batch.1, Batch.2, Batch.3, Batch.all)
n.batchframes = length(BatchList) ;
batchnames = as.character(sapply(1:n.batchframes,
function(x) paste0(BatchList[[x]]$BatchName,"-",
BatchList[[x]]$BatchID))) ;
Batch.Var.Frame = BatchList[[1]]$Taxon.Variation
for ( i in 2:n.batchframes){
Batch.Var.Frame = merge(Batch.Var.Frame, BatchList[[i]]$Taxon.Variation, by ="Tax.ID")
}
Batch.Var.Frame = BatchList[[1]]$Taxon.Variation
colnames(Batch.Var.Frame)[2]
colnames(Batch.Var.Frame)[2] = batchnames[1]
Batch.Var.Frame = BatchList[[1]]$Taxon.Variation
colnames(Batch.Var.Frame)[2] = batchnames[1]
for ( i in 2:n.batchframes){
Batch.Var.Frame = merge(Batch.Var.Frame, BatchList[[i]]$Taxon.Variation, by ="Tax.ID")
colnames(Batch.Var.Frame)[i+1] = batchnames[i]
}
View(Batch.Var.Frame)
Batch.Var.Frame = BatchList[[1]]$Taxon.Variation
colnames(Batch.Var.Frame)[2] = batchnames[1]
for ( i in 2:n.batchframes){
Batch.Var.Frame = merge(Batch.Var.Frame, BatchList[[i]]$Taxon.Variation, by ="Tax.ID", all=T)
colnames(Batch.Var.Frame)[i+1] = batchnames[i]
}
which(colnames(Batch.Var.Frame) == "NoBatch-NoBatch")
colnames(Batch.Var.Frame)[which(colnames(Batch.Var.Frame) == "NoBatch-NoBatch")]
colnames(Batch.Var.Frame)[which(colnames(Batch.Var.Frame) == "NoBatch-NoBatch")] = "All"
document()
BatchVar = BatchAssemble(list(Batch.1,Batch.2, Batch.3, Batch.all))
View(BatchVar)
ncbi_get_taxon_summary(5061)
ncbi_get_taxon_summary(2839)
Batch.total = list(Batch.all)
EE.meta
EE.meta$EX.batch
unique(EE.meta$EX.batch)
as.character(unique(EE.meta$EX.batch)
)
as.character(unique(EE.meta$EX.batch))
Batch.total = list(Batch.all)
for (i in as.character(unique(EE.meta$EX.batch))){
Batch.total = c(Batch.total,
WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
BatchName = "EX.batch",BatchID = i,
MetaDataObject = EE.meta,Correlate.threshold = 10**-1))
}
BatchVar = BatchAssemble(list(Batch.total)
BatchVar = BatchAssemble(list(Batch.total))
BatchVar = BatchAssemble((Batch.total))
Batch.total = list(Batch.all)
for (i in as.character(unique(EE.meta$EX.batch))){
Batch.total = list(Batch.total,
WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
BatchName = "EX.batch",BatchID = i,
MetaDataObject = EE.meta,Correlate.threshold = 10**-1))
}
BatchVar = BatchAssemble((Batch.total))
Batch.total = Batch.all
for (i in as.character(unique(EE.meta$EX.batch))){
Batch.total = c(Batch.total,
WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
BatchName = "EX.batch",BatchID = i,
MetaDataObject = EE.meta,Correlate.threshold = 10**-1))
}
Batch.total = list(Batch.all)
Batch.total
Batch.total[[1]]
Batch.total[[2]]
Batch.total = list(Batch.all)
for (i in 1:length(as.character(unique(EE.meta$EX.batch)))){
Batch.total[[i+1]] =  WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
BatchName = "EX.batch",BatchID = as.character(unique(EE.meta$EX.batch))[i],
MetaDataObject = EE.meta,Correlate.threshold = 10**-1)
}
BatchVar = BatchAssemble((Batch.total))
View(BatchVar)
ncbi_get_taxon_summary()
ncbi_get_taxon_summary(5061)
for (j in 1:length(as.character(unique(EE.meta$LP.batch)))){
Batch.total[[i+1]] =  WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
BatchName = "LP.batch",BatchID = as.character(unique(EE.meta$LP))[i],
MetaDataObject = EE.meta,Correlate.threshold = 10**-1)
}
i
for (j in 1:length(as.character(unique(EE.meta$LP.batch)))){
Batch.total[[j+i+1]] =  WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
BatchName = "LP.batch",BatchID = as.character(unique(EE.meta$LP))[j],
MetaDataObject = EE.meta,Correlate.threshold = 10**-1)
}
BatchVar = BatchAssemble((Batch.total))
View(BatchVar)
BatchVar[BatchVar > 0.01]
BatchVar[BatchVar > 0.01 & !is.na(BatchVar),]
BatchVar[(BatchVar > 0.01) & !is.na(BatchVar)]
ncbi_get_taxon_summary(687379)
head(abund.matrix)
head(abund.matrix[,1:6])
colsums(head(abund.matrix[,1:6]))
colSums(head(abund.matrix[,1:6]))
colSums(abund.matrix)
document(WithinBatchMean)
document()
install("/workdir/psb84/SparseMetagenomics/SparseMetagenomicCorrection")
library(SparseMetagenomicCorrection)
WithinBatchMean(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta)
new.list = c()
for( i in as.character(unique(EE.subset.abundance$Taxon))){
new.list = rbind(new.list,
MetaCorrelation(tax.ID = i, AbundanceObject = EE.subset.abundance, AbundanceVariable = "Measurement",
MetaDataObject = EE.meta, FeatureVariable = "Biomass"))
}
new.new.list = new.list[new.list$P.value < (10**-2),]
View(new.new.list)
document()
Batch.all = WithinBatchMean(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta)
Batch.total.mean = list(Batch.all)
for (i in 1:length(as.character(unique(EE.meta$EX.batch)))){
Batch.total.mean[[i+1]] =  WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
BatchName = "EX.batch",BatchID = as.character(unique(EE.meta$EX.batch))[i],
MetaDataObject = EE.meta,Correlate.threshold = 10**-1)
}
for (j in 1:length(as.character(unique(EE.meta$LP.batch)))){
Batch.total.mean[[j+i+1]] =  WithinBatchVariation(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
BatchName = "LP.batch",BatchID = as.character(unique(EE.meta$LP))[j],
MetaDataObject = EE.meta,Correlate.threshold = 10**-1)
}
BatchVar = BatchAssemble((Batch.total.var),metric = "variance")
BatchMean = BatchAssemble((Batch.total), metric = "mean")
BatchMean = BatchAssemble((Batch.total.mean), metric = "mean")
Batch.total.mean[[1]]
Batch.total.mean[[1]]$Mean.Batch.Abundance
Batch.total.mean[[10]]$Mean.Batch.Abundance
Batch.all = WithinBatchMean(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
MetaDataObject = EE.meta)
Batch.total.mean = list(Batch.all)
for (i in 1:length(as.character(unique(EE.meta$EX.batch)))){
Batch.total.mean[[i+1]] =  WithinBatchMean(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
BatchName = "EX.batch",BatchID = as.character(unique(EE.meta$EX.batch))[i],
MetaDataObject = EE.meta)
}
for (j in 1:length(as.character(unique(EE.meta$LP.batch)))){
Batch.total.mean[[j+i+1]] =  WithinBatchMean(AbundanceObject = EE.subset.abundance,AbundanceVariable = "Measurement",
BatchName = "LP.batch",BatchID = as.character(unique(EE.meta$LP))[j],
MetaDataObject = EE.meta)
}
BatchMean = BatchAssemble((Batch.total.mean), metric = "mean")
View(BatchMean)
### Libraries -----------
library(devtools); library(ggplot2)
install("/workdir/psb84/SparseMetagenomics/SparseMetagenomicCorrection")
library(SparseMetagenomicCorrection)
# Load the abundance matrix and subset it
KT.abundance = LoadAbundance(dir = "/workdir/psb84/SMA_data/", file = "KTx.SMA.grammy.tab")
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "species")
View(KT.subset.abundance)
ncbi_get_taxon_summary(GU5564)
ncbi_get_taxon_summary(10629)
# Load the abundance matrix and subset it
KT.abundance = LoadAbundance(dir = "/workdir/psb84/SMA_data/", file = "KTx.SMA.grammy.tab")
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "species")
KT.subset.abundance$Sample
unique(KT.subset.abundance$Sample)
setwd("/workdir/psb84/SMA_data/")
lab_meta_data = data.frame(read.table("KTx_SMA.metadata.tab",header = T, sep = "\t"))
lab_meta_data
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(lab_meta_data, select = c("Sample", "Bacteria.species")),ParameterName = "CI.species")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(lab_meta_data, select = c("Sample", "Status")),ParameterName = "Status")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(lab_meta_data, select = c("Sample", "Bacteria.species")),ParameterName = "CI.species")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(lab_meta_data, select = c("Sample", "Bacteria.genus")),ParameterName = "CI.genus")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(lab_meta_data, select = c("Sample", "Status")),ParameterName = "Status")
KT.abundance = LoadAbundance(dir = "/workdir/psb84/SMA_data/", file = "KTx.SMA.grammy.tab")
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "species")
lab_meta_data = data.frame(read.table("KTx_SMA.metadata.tab",header = T, sep = "\t"))
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(lab_meta_data, select = c("Sample", "Bacteria.species")),ParameterName = "CI.species")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(lab_meta_data, select = c("Sample", "Bacteria.genus")),ParameterName = "CI.genus")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(lab_meta_data, select = c("Sample", "Status")),ParameterName = "Status")
View(KT.abundance)
View(KT.subset.abundance)
View(KT.subset.abundance)
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(lab_meta_data, select = c("Sample", "Rec.gender")),ParameterName = "R.gender")
View(KT.subset.abundance)
clinical.metadata = data.frame(read.table("KTx_SMA.metadata.tab",header = T, sep = "\t"))
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Bacteria.species")),ParameterName = "CI.species")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Bacteria.genus")),ParameterName = "CI.genus")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Status")),ParameterName = "Status")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Rec.gender")),ParameterName = "R.gender")
lab.metadata = data.frame(read.table("cfDNA_dataset_list_121818.csv",header = T, sep = "\t"))
lab.metadata = data.frame(read.table("cfDNA_121818.csv",header = T, sep = ","))
View(lab.metadata)
# Read in metadata
clinical_meta_data = data.frame(read.table("KTx_SMA.metadata.tab",header = T,sep="\t"))
lab_meta_data = data.frame(read.table("cfDNA_121818.csv",header = T,sep=","))
lp.meta = subset.data.frame(lab_meta_data,select = c("Sample_name","Date_libprep","Batch_libprep"))
lp.meta$Batch = paste0(lp.meta$Date_libprep,"_",lp.meta$Batch_libprep)
lp.meta
KT.meta = InitializeMetaData(SampleVector = as.character(as.matrix(lab_meta_data$Sample_name)),
BatchVector = paste0(as.character(as.matrix(lab_meta_data$Date_extraction)),"_",
as.character(as.matrix(lab_meta_data$Batch_extraction))),
BatchName = "EX.batch") ;
KT.meta = AddMetaData(MetaDataObject = KT.meta,
BatchFrame = lp.meta[,c(1,4)],
BatchName = "LP.batch") ;
View(KT.meta)
lab_meta_data = data.frame(read.table("cfDNA_121818.csv",header = T,sep=","))
KT.meta = InitializeMetaData(SampleVector = as.character(as.matrix(lab_meta_data$Sample_name)),
BatchVector = paste0(as.character(as.matrix(lab_meta_data$Date_extraction)),"_",
as.character(as.matrix(lab_meta_data$Batch_extraction))),
BatchName = "EX.batch") ;
KT.meta = AddMetaData(MetaDataObject = KT.meta,
BatchFrame = paste0(as.character(as.matrix(lab_meta_data$Date_libprep)),"_",
as.character(as.matrix(lab_meta_data$Batch_libprep))),
BatchName = "LP.batch") ;
lp.meta = subset.data.frame(lab_meta_data,select = c("Sample_name","Date_libprep","Batch_libprep"))
lp.meta$Batch = paste0(lp.meta$Date_libprep,"_",lp.meta$Batch_libprep)
KT.meta = AddMetaData(MetaDataObject = KT.meta,
BatchFrame = lp.meta[,c(1,4)],
BatchName = "LP.batch") ;
View(KT.meta)
KT.meta = AddMetaData(MetaDataObject = KT.meta,
ParameterFrame = subset.data.frame(lab_meta_data, select = c("Sample_name", "Biomass_at_libprep_ng")),
ParameterName = "Biomass") ;
# Generate statistics on the microbiome data
KTx.summary = GenerateStats(AbundanceObject = EE.subset.abundance)
# Generate statistics on the microbiome data
KTx.summary = GenerateStats(AbundanceObject = KT.subset.abundance)
View(KTx.summary)
KT.abundance = subset.data.frame(KT.abundance, superkingdown == 2)
KT.abundance = subset.data.frame(KT.abundance, superkingdom == 2)
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "species")
View(KT.subset.abundance)
KT.abundance = subset.data.frame(KT.abundance, RelCoverage > 0.01)
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "species")
View(KT.subset.abundance)
ggplot(KT.subset.abundance,aes(Sample,Taxon))+geom_tile()
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+geom_tile()
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+geom_tile(aes(fill=log10(measurement)))
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+geom_tile(aes(fill=log10(Measurement)))
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Bacteria.genus")),ParameterName = "CI.genus")
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus)+
geom_tile(aes(fill=log10(Measurement)))
# Load the abundance matrix and subset it
KT.abundance = LoadAbundance(dir = "/workdir/psb84/SMA_data/", file = "KTx.SMA.grammy.tab")
KT.abundance = subset.data.frame(KT.abundance, superkingdom == 2)
KT.abundance = subset.data.frame(KT.abundance, RelCoverage > 0.01)
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "genus")
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus)+
geom_tile(aes(fill=log10(Measurement)))
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Bacteria.genus")),ParameterName = "CI.genus")
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus)+
geom_tile(aes(fill=log10(Measurement)))
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, space = "free")+
geom_tile(aes(fill=log10(Measurement)))
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scale = "free")+
geom_tile(aes(fill=log10(Measurement)))
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free")+
geom_tile(aes(fill=log10(Measurement)))
KT.abundance = LoadAbundance(dir = "/workdir/psb84/SMA_data/", file = "KTx.SMA.grammy.tab")
KT.abundance = subset.data.frame(KT.abundance, superkingdom == 2)
KT.abundance = subset.data.frame(KT.abundance, RelCoverage > 0.1)
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "genus")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Bacteria.genus")),ParameterName = "CI.genus")
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free")+
geom_tile(aes(fill=log10(Measurement)))
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
# Load the abundance matrix and subset it
KT.abundance = LoadAbundance(dir = "/workdir/psb84/SMA_data/", file = "KTx.SMA.grammy.tab")
KT.abundance = subset.data.frame(KT.abundance, superkingdom == 2)
KT.abundance = subset.data.frame(KT.abundance, RelCoverage > 0.01)
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "genus")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Bacteria.genus")),ParameterName = "CI.genus")
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
ggplot(subset(KT.subset.abundance, Taxon %in% c(570)),aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
ggplot(subset(KT.subset.abundance, Taxon %in% c(570, 1350)),aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
ncbi_get_taxon_summary(570)
ggplot(subset(KT.subset.abundance, Taxon %in% c(561, 1350)),aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
ggplot(subset(KT.subset.abundance, Taxon %in% c(561, 1350)),aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_blank(data = KT.subset.abundance)+
geom_tile(aes(fill=log10(Measurement)))
# Load the abundance matrix and subset it
KT.abundance = LoadAbundance(dir = "/workdir/psb84/SMA_data/", file = "KTx.SMA.grammy.tab")
KT.abundance = subset.data.frame(KT.abundance, superkingdom == 2)
KT.abundance = subset.data.frame(KT.abundance, RelCoverage > 0.001)
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "genus")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Bacteria.genus")),ParameterName = "CI.genus")
ggplot(subset(KT.subset.abundance, Taxon %in% c(561, 1350)),aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_blank(data = KT.subset.abundance)+
geom_tile(aes(fill=log10(Measurement)))
ggplot(subset(KT.subset.abundance, Taxon %in% c(561, 1350)),aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
ggplot(subset(KT.subset.abundance, Taxon %in% c(561, 1350)),aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_tile(aes(fill=sqrt(Measurement)))
log10
ggplot(subset(KT.subset.abundance, Taxon %in% c(561, 1350)),aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
KT.abundance = subset.data.frame(KT.abundance, superkingdom == 2)
KT.abundance = subset.data.frame(KT.abundance, RelCoverage > 0.1)
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "genus")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Bacteria.genus")),ParameterName = "CI.genus")
ggplot(subset(KT.subset.abundance, Taxon %in% c(561, 1350)),aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~CI.genus, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~Rec.gender, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Status")),ParameterName = "Status")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Rec.gender")),ParameterName = "R.gender")
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~Rec.gender, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~R.gender, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
KT.abundance = subset.data.frame(KT.abundance, RelCoverage > 1)
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "genus")
# Load the abundance matrix and subset it
KT.abundance = LoadAbundance(dir = "/workdir/psb84/SMA_data/", file = "KTx.SMA.grammy.tab")
KT.abundance = subset.data.frame(KT.abundance, superkingdom == 2)
KT.abundance = subset.data.frame(KT.abundance, RelCoverage > 1)
KT.subset.abundance = SubsetAbundance(AbundanceObject = KT.abundance, sample.column = 2,measurement = "RelCoverage", tax.level = "genus")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Bacteria.genus")),ParameterName = "CI.genus")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Bacteria.species")),ParameterName = "CI.species")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Status")),ParameterName = "Status")
KT.subset.abundance = AddMetaData(KT.subset.abundance, ParameterFrame = subset.data.frame(clinical.metadata, select = c("Sample", "Rec.gender")),ParameterName = "R.gender")
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~R.gender, scales = "free", space = "free")+
geom_t
ggplot(KT.subset.abundance,aes(Sample,factor(Taxon)))+
facet_grid(~R.gender, scales = "free", space = "free")+
geom_tile(aes(fill=log10(Measurement)))
ncbi_get_taxon_summary(620)
ncbi_get_taxon_summary(2701)
ncbi_get_taxon_summary(1279)
ncbi_get_taxon_summary(1301)
ncbi_get_taxon_summary(2129)
SparseMetagenomicCorrection::AlignmentStatisticsforSample(sample = "GU5_BKV",bin.size = 10**3, file.align.dir = "~/Grammy_backup/tblat_tables/",tax.level = "species",
file.abund.dir = "~/Grammy_backup/grammy_tables/")
EE.sample.list
EE.sample.list = as.character(as.matrix(data.frame(EE.summary[2])$Sample))
allaligninfo = c()
for ( i in EE.sample.list){
if(file.exists(paste0("/home/psb84/Grammy_backup/tblat_tables/",i,".tblat.1"))){
allaligninfo = rbind(allaligninfo,
AlignmentStatisticsforSample(sample = i,bin.size = 10**2, tax.level = "species",
file.align.dir = "/home/psb84/Grammy_backup/tblat_tables/",
file.align.extension = ".tblat.1",
file.abund.dir = "/home/psb84/Grammy_backup/grammy_tables/",
file.abund.extension = ".grammy.tab",
file.out.dir = "/workdir/psb84/KTx/microbe_alignments_dbase/"))
}
}
EE.sample.list = as.character(as.matrix(data.frame(EE.summary[2])$Sample))
allaligninfo = c()
for ( i in EE.sample.list){
if(file.exists(paste0("/home/psb84/Grammy_backup/tblat_tables/",i,".tblat.1"))){
allaligninfo = rbind(allaligninfo,
AlignmentStatisticsforSample(sample = i,bin.size = 10**3, tax.level = "species",
file.align.dir = "/home/psb84/Grammy_backup/tblat_tables/",
file.align.extension = ".tblat.1",
file.abund.dir = "/home/psb84/Grammy_backup/grammy_tables/",
file.abund.extension = ".grammy.tab",
file.out.dir = "/workdir/psb84/KTx/microbe_alignments_dbase/"))
}
}
